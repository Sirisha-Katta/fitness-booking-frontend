{"ast":null,"code":"var _jsxFileName = \"/Users/kssirisha/Documents/Fitness_Booking_App/Booking App/my-react-frontend/src/components/Classes/ClassesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchClasses } from '../../api/api';\nimport TimezoneFilter from '../TimezoneFilter';\nimport { bookClass } from '../../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClassesList = ({\n  user\n}) => {\n  _s();\n  const [classes, setClasses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [timezone, setTimezone] = useState('Asia/Kolkata'); // Fixed typo: Kolkata not Kolkatha\n  const [bookingMsg, setBookingMsg] = useState('');\n  const [bookingStatus, setBookingStatus] = useState(''); // 'success' or 'error'\n\n  const handleTimezoneChange = newTimezone => {\n    setTimezone(newTimezone);\n  };\n  useEffect(() => {\n    const getClasses = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await fetchClasses(timezone);\n        setClasses(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getClasses();\n  }, [timezone]); // This ensures API call happens when timezone changes\n\n  const formatDateTime = (isoString, timezone) => {\n    const date = new Date(isoString);\n    return new Intl.DateTimeFormat('en-GB', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false,\n      timeZone: timezone\n    }).format(date);\n  };\n  const handleBookClass = async classItem => {\n    setBookingMsg('');\n    setBookingStatus('');\n    if (!user || !user.name || !user.email) {\n      setBookingMsg('Please log in to book a class.');\n      setBookingStatus('error');\n      return;\n    }\n    try {\n      await bookClass({\n        name: user.name,\n        email: user.email,\n        class_id: classItem.class_id\n      });\n      setBookingMsg(`Successfully booked ${classItem.name}!`);\n      setBookingStatus('success');\n    } catch (err) {\n      setBookingMsg('Booking failed. Please try again.');\n      setBookingStatus('error');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading classes...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"classes-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"greeting\",\n      children: [\"Hi\", user && user.name ? `, ${user.name}` : '', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimezoneFilter, {\n      selectedTimezone: timezone,\n      onTimezoneChange: handleTimezoneChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Classes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), bookingMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `booking-message ${bookingStatus === 'success' ? 'success' : 'error'} message-enter`,\n      children: bookingMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"classes-\",\n      children: classes.map(classItem => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"class-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"class-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"class-name\",\n            children: classItem.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"class-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"class-datetime\",\n              children: [\"Date & Time: \", formatDateTime(classItem.datetime, timezone)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"class-instructor\",\n              children: [\"Instructor: \", classItem.instructor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"class-slots\",\n              children: [\"Available Slots: \", classItem.available_slots]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"book-button\",\n          onClick: () => handleBookClass(classItem),\n          children: \"Book Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, classItem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(ClassesList, \"wmbar0kaoOsAI908zm7tJH8tESo=\");\n_c = ClassesList;\nexport default ClassesList;\nvar _c;\n$RefreshReg$(_c, \"ClassesList\");","map":{"version":3,"names":["React","useEffect","useState","fetchClasses","TimezoneFilter","bookClass","jsxDEV","_jsxDEV","ClassesList","user","_s","classes","setClasses","loading","setLoading","error","setError","timezone","setTimezone","bookingMsg","setBookingMsg","bookingStatus","setBookingStatus","handleTimezoneChange","newTimezone","getClasses","data","err","message","formatDateTime","isoString","date","Date","Intl","DateTimeFormat","day","month","year","hour","minute","second","hour12","timeZone","format","handleBookClass","classItem","name","email","class_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedTimezone","onTimezoneChange","map","datetime","instructor","available_slots","onClick","id","_c","$RefreshReg$"],"sources":["/Users/kssirisha/Documents/Fitness_Booking_App/Booking App/my-react-frontend/src/components/Classes/ClassesList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchClasses } from '../../api/api';\nimport TimezoneFilter from '../TimezoneFilter';\nimport { bookClass } from '../../api/api';\n\nconst ClassesList = ({ user }) => {\n    const [classes, setClasses] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [timezone, setTimezone] = useState('Asia/Kolkata'); // Fixed typo: Kolkata not Kolkatha\n    const [bookingMsg, setBookingMsg] = useState('');\n    const [bookingStatus, setBookingStatus] = useState(''); // 'success' or 'error'\n\n    const handleTimezoneChange = (newTimezone) => {\n        setTimezone(newTimezone);\n    };\n\n    useEffect(() => {\n        const getClasses = async () => {\n            setLoading(true);\n            setError(null);\n            try {\n                const data = await fetchClasses(timezone);\n                setClasses(data);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        getClasses();\n    }, [timezone]); // This ensures API call happens when timezone changes\n\n    const formatDateTime = (isoString, timezone) => {\n        const date = new Date(isoString);\n        return new Intl.DateTimeFormat('en-GB', {\n            day: '2-digit',\n            month: '2-digit',\n            year: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour12: false,\n            timeZone: timezone,\n        }).format(date);\n    };\n\n    const handleBookClass = async (classItem) => {\n        setBookingMsg('');\n        setBookingStatus('');\n        \n        if (!user || !user.name || !user.email) {\n            setBookingMsg('Please log in to book a class.');\n            setBookingStatus('error');\n            return;\n        }\n\n        try {\n            await bookClass({\n                name: user.name,\n                email: user.email,\n                class_id: classItem.class_id\n            });\n            setBookingMsg(`Successfully booked ${classItem.name}!`);\n            setBookingStatus('success');\n        } catch (err) {\n            setBookingMsg('Booking failed. Please try again.');\n            setBookingStatus('error');\n        }\n    };\n\n    if (loading) return <div className=\"loading\">Loading classes...</div>;\n    if (error) return <div className=\"error-message\">Error: {error}</div>;\n\n    return (\n        <div className=\"classes-list\">\n            <h3 className=\"greeting\">Hi{user && user.name ? `, ${user.name}` : ''}!</h3>\n            <TimezoneFilter selectedTimezone={timezone} onTimezoneChange={handleTimezoneChange} />\n            <h2>Available Classes</h2>\n            {bookingMsg && (\n                <div className={`booking-message ${bookingStatus === 'success' ? 'success' : 'error'} message-enter`}>\n                    {bookingMsg}\n                </div>\n            )}\n            <ul className=\"classes-\">\n                {classes.map((classItem) => (\n                    <li key={classItem.id} className=\"class-item\">\n                        <div className=\"class-info\">\n                            <strong className=\"class-name\">{classItem.name}</strong>\n                            <div className=\"class-details\">\n                                <span className=\"class-datetime\">\n                                    Date & Time: {formatDateTime(classItem.datetime, timezone)}\n                                </span>\n                                <span className=\"class-instructor\">\n                                    Instructor: {classItem.instructor}\n                                </span>\n                                <span className=\"class-slots\">\n                                    Available Slots: {classItem.available_slots}\n                                </span>\n                            </div>\n                        </div>\n                        <button \n                            className=\"book-button\"\n                            onClick={() => handleBookClass(classItem)}\n                        >\n                            Book Class\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ClassesList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}