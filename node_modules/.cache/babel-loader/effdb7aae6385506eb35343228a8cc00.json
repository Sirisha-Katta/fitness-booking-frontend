{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // Replace with your actual API base URL\n\nexport const signup = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/signup`, userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const login = async credentials => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login`, credentials);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const fetchClasses = async timezone => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/classes`, {\n      params: {\n        timezone\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const bookClass = async bookingData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/book`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: bookingData.name,\n        email: bookingData.email,\n        class_id: bookingData.class_id,\n        timezone: bookingData.timezone || 'Asia/Kolkata'\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || `Booking failed: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error booking class:', error);\n    throw error;\n  }\n};\nexport const fetchBookings = async email => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/bookings`, {\n      params: {\n        email\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Add this function to your api.js file\n\nexport const fetchUserBookings = async email => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/bookings/${encodeURIComponent(email)}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      if (response.status === 404) {\n        return []; // Return empty array if no bookings found\n      }\n      throw new Error(`Failed to fetch user bookings: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching user bookings:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","signup","userData","response","post","data","error","login","credentials","fetchClasses","timezone","get","params","bookClass","bookingData","fetch","method","headers","body","JSON","stringify","name","email","class_id","ok","errorData","json","Error","detail","status","console","fetchBookings","fetchUserBookings","encodeURIComponent"],"sources":["/Users/kssirisha/Documents/Fitness_Booking_App/Booking App/my-react-frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // Replace with your actual API base URL\n\nexport const signup = async (userData) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/signup`, userData);\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\nexport const login = async (credentials) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/login`, credentials);\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\nexport const fetchClasses = async (timezone) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/classes`, {\n            params: { timezone }\n        });\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\nexport const bookClass = async (bookingData) => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/book`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: bookingData.name,\n                email: bookingData.email,\n                class_id: bookingData.class_id,\n                timezone: bookingData.timezone || 'Asia/Kolkata'\n            }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.detail || `Booking failed: ${response.status}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error('Error booking class:', error);\n        throw error;\n    }\n};\nexport const fetchBookings = async (email) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/bookings`, {\n            params: { email }\n        });\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\n// Add this function to your api.js file\n\nexport const fetchUserBookings = async (email) => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/bookings/${encodeURIComponent(email)}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n\n        if (!response.ok) {\n            if (response.status === 404) {\n                return []; // Return empty array if no bookings found\n            }\n            throw new Error(`Failed to fetch user bookings: ${response.status}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error('Error fetching user bookings:', error);\n        throw error;\n    }\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}