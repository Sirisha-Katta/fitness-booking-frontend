{"ast":null,"code":"var _jsxFileName = \"/Users/kssirisha/Documents/Fitness_Booking_App/Booking App/my-react-frontend/src/components/Bookings/BookingsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchBookings } from '../../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingsPage = ({\n  userEmail,\n  timezone = 'Asia/Kolkata'\n}) => {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const getBookings = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        const data = await fetchBookings(userEmail);\n        setBookings(data);\n      } catch (err) {\n        setError('Failed to fetch bookings.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (userEmail) {\n      getBookings();\n    }\n  }, [userEmail]);\n  const formatDateTime = isoString => {\n    const options = {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      timeZoneName: 'short',\n      timeZone: timezone\n    };\n    return new Date(isoString).toLocaleString(undefined, options);\n  };\n  if (!userEmail) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please log in to view your bookings.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading bookings...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Bookings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), bookings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bookings found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: bookings.map(booking => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [booking.class_name, \" - \", formatDateTime(booking.datetime)]\n      }, booking.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(BookingsPage, \"BT4NxVaa8/YLJJTdHhhC9vujNog=\");\n_c = BookingsPage;\nexport default BookingsPage;\nvar _c;\n$RefreshReg$(_c, \"BookingsPage\");","map":{"version":3,"names":["React","useEffect","useState","fetchBookings","jsxDEV","_jsxDEV","BookingsPage","userEmail","timezone","_s","bookings","setBookings","loading","setLoading","error","setError","getBookings","data","err","formatDateTime","isoString","options","weekday","year","month","day","hour","minute","timeZoneName","timeZone","Date","toLocaleString","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","booking","class_name","datetime","id","_c","$RefreshReg$"],"sources":["/Users/kssirisha/Documents/Fitness_Booking_App/Booking App/my-react-frontend/src/components/Bookings/BookingsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchBookings } from '../../api/api';\n\nconst BookingsPage = ({ userEmail, timezone = 'Asia/Kolkata' }) => {\n    const [bookings, setBookings] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const getBookings = async () => {\n            setLoading(true);\n            setError('');\n            try {\n                const data = await fetchBookings(userEmail);\n                setBookings(data);\n            } catch (err) {\n                setError('Failed to fetch bookings.');\n            } finally {\n                setLoading(false);\n            }\n        };\n        if (userEmail) {\n            getBookings();\n        }\n    }, [userEmail]);\n\n    const formatDateTime = (isoString) => {\n        const options = {\n            weekday: 'short',\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit',\n            timeZoneName: 'short',\n            timeZone: timezone\n        };\n        return new Date(isoString).toLocaleString(undefined, options);\n    };\n\n    if (!userEmail) {\n        return <div>Please log in to view your bookings.</div>;\n    }\n\n    if (loading) return <div>Loading bookings...</div>;\n    if (error) return <div>{error}</div>;\n\n    return (\n        <div>\n            <h2>Your Bookings</h2>\n            {bookings.length === 0 ? (\n                <p>No bookings found.</p>\n            ) : (\n                <ul>\n                    {bookings.map((booking) => (\n                        <li key={booking.id}>\n                            {booking.class_name} - {formatDateTime(booking.datetime)}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default BookingsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}