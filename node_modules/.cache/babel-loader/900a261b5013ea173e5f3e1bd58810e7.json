{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // Replace with your actual API base URL\n\nexport const signup = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/signup`, userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const login = async credentials => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login`, credentials);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const fetchClasses = async timezone => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/classes`, {\n      params: {\n        timezone\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const bookClass = async ({\n  name,\n  email,\n  class_id\n}) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/book`, {\n      client_name: name,\n      client_email: email,\n      class_id: class_id\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error;\n  }\n};\nexport const fetchBookings = async email => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/bookings`, {\n      params: {\n        email\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Add this function to your api.js file\n\nexport const fetchUserBookings = async email => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/bookings/${encodeURIComponent(email)}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      if (response.status === 404) {\n        return []; // Return empty array if no bookings found\n      }\n      throw new Error(`Failed to fetch user bookings: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching user bookings:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","signup","userData","response","post","data","error","login","credentials","fetchClasses","timezone","get","params","bookClass","name","email","class_id","client_name","client_email","_error$response","fetchBookings","fetchUserBookings","fetch","encodeURIComponent","method","headers","ok","status","Error","json","console"],"sources":["/Users/kssirisha/Documents/Fitness_Booking_App/Booking App/my-react-frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://127.0.0.1:8000'; // Replace with your actual API base URL\n\nexport const signup = async (userData) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/signup`, userData);\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\nexport const login = async (credentials) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/login`, credentials);\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\nexport const fetchClasses = async (timezone) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/classes`, {\n            params: { timezone }\n        });\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\nexport const bookClass = async ({ name, email, class_id }) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/book`, {\n            client_name: name,\n            client_email: email,\n            class_id: class_id\n        });\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || error;\n    }\n};\nexport const fetchBookings = async (email) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/bookings`, {\n            params: { email }\n        });\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\n// Add this function to your api.js file\n\nexport const fetchUserBookings = async (email) => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/bookings/${encodeURIComponent(email)}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n\n        if (!response.ok) {\n            if (response.status === 404) {\n                return []; // Return empty array if no bookings found\n            }\n            throw new Error(`Failed to fetch user bookings: ${response.status}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error('Error fetching user bookings:', error);\n        throw error;\n    }\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}